<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false" scan="true" scanPeriod="10 seconds">
    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <contextName>logback</contextName>
    
    <!-- 设置存储路径 -->
    <property name="log.path" value="log" />

	<!-- 输出到控制台 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度，  %msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>
    
    
    <!-- 日志记录器，滚动记录 -->
    <appender name="FILE_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	 <file>${log.path}/info.log</file>
    	 <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    	 	<!-- 日志记录器的滚动策略，按日期，按大小记录  %d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
    	 	<fileNamePattern>${log.path}/back/info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
    	 	<!-- 日志保存周期 -->
    	 	 <maxHistory>30</maxHistory>
    	 	 <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
    	 </rollingPolicy>
    	 <!-- 追加方式记录日志 -->
        <append>true</append>
         <!-- 日志文件的格式 -->
        <encoder>
        	<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
 		<!-- 级别过滤：只记录info级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>    
    </appender>
    
     <!-- 日志记录器，日期滚动记录 -->
    <appender name="FILE_WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	 <file>${log.path}/warn.log</file>
    	 <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    	 	<!-- 日志记录器的滚动策略，按日期，按大小记录  %d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
    	 	<fileNamePattern>${log.path}/back/warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
    	 	 <maxHistory>30</maxHistory>
    	 	 <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
    	 </rollingPolicy>
    	 <!-- 追加方式记录日志 -->
        <append>true</append>
         <!-- 日志文件的格式 -->
        <encoder>
        	<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
 		<!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>warn</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>    
    </appender>
    
    <!-- 日志记录器，日期滚动记录 -->
    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	 <file>${log.path}/error.log</file>
    	 <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    	 	<!-- 日志记录器的滚动策略，按日期，按大小记录  %d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
    	 	<fileNamePattern>${log.path}/back/error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
    	 	 <maxHistory>30</maxHistory>
    	 	 <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
    	 </rollingPolicy>
    	 <!-- 追加方式记录日志 -->
        <append>true</append>
         <!-- 日志文件的格式 -->
        <encoder>
        	<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
 		<!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>    
    </appender>
    
    
    <!-- 自定义 -->
    <appender name="FILE_5G" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	 <file>${log.path}/5g.log</file>
    	 <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    	 	<!-- 日志记录器的滚动策略，按日期，按大小记录  %d{yyyy-MM-dd}指定日期格式-->
    	 	<fileNamePattern>${log.path}/back/5g-%d{yyyy-MM-dd}.log</fileNamePattern>
    	 </rollingPolicy>
    	 <!-- 追加方式记录日志 -->
        <append>true</append>
         <!-- 日志文件的格式 -->
        <encoder>
        	<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} - %msg%n</pattern>
        </encoder>
        <!-- 此日志文件只记录trace级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>trace</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    
    <!-- 屏蔽jar包ERROR以外的日志输出 -->
    <logger name="org.hibernate" level="ERROR"/>
    <logger name="org.mybatis" level="ERROR"/>
    <logger name="org.apache" level="ERROR"/>
    <logger name="org.springframework" level="ERROR"/>
    <logger name="ch.qos.logback" level="ERROR"/>
     <logger name="org.springframework.web" level="ERROR"/>
    <logger name="org.springboot.sample" level="ERROR" />
    <logger name="com.alibaba.druid" level="ERROR" />
    
    <!-- 自定义文件输出 -->
    <logger name="5G" level="TRACE">
		<appender-ref ref="FILE_5G" />
	</logger>

    <!-- 日志输出级别 -->
    <root level="INFO">
        <!-- <appender-ref ref="CONSOLE" /> -->
        <appender-ref ref="FILE_INFO" />
        <appender-ref ref="FILE_WARN" />
        <appender-ref ref="FILE_ERROR" />
    </root>

</configuration>